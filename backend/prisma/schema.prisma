// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id              Int              @id @default(autoincrement())
  username        String           @unique
  externalId      String           @default(uuid())
  email           String           @unique
  perfilPhoto     String?          @map("perfil_photo")
  password        String
  chatLines       ChatLine[]
  createdAt       DateTime         @default(now())
  accessUsersChat AccessUserChat[]
  Chat            Chat[]

  @@map("users")
}

model AccessUserChat {
  id     Int @id @default(autoincrement())
  userId Int @unique
  chatId Int

  user User @relation(fields: [userId], references: [id])
  chat Chat @relation(fields: [chatId], references: [id])

  @@map("access_user_chat")
}

model Chat {
  id              Int              @id @default(autoincrement())
  name            String
  description     String
  category        String
  photo           String?
  isPublic        Boolean
  creator         User             @relation(fields: [userId], references: [id])
  chatLines       ChatLine[]
  createdAt       DateTime         @default(now())
  accessUsersChat AccessUserChat[]
  tagsOfChats     TagsOfChats[]
  userId          Int

  @@map("chats")
}

model TagsOfChats {
  id        Int @id @default(autoincrement())
  chatTagId Int
  chatId    Int

  chat Chat    @relation(fields: [chatId], references: [id])
  tag  ChatTag @relation(fields: [chatTagId], references: [id])

  @@map("tags_of_chat")
}

model ChatTag {
  id          Int           @id @default(autoincrement())
  name        String
  tagsOfChats TagsOfChats[]

  @@map("chat_tag")
}

model ChatLine {
  id        Int      @id @default(autoincrement())
  chatId    Int
  userId    Int
  message   String
  createdAt DateTime @default(now())

  chat Chat @relation(fields: [chatId], references: [id])
  user User @relation(fields: [userId], references: [id])

  @@map("chat_line")
}
